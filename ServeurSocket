//ce que l'on aurait du ajouter au projet si on avait eu un peu plus de temps
package jeu2;

import java.io.IOException;
import java.net.ServerSocket;
import java.util.ArrayList;
/**
 * Socket du serveur.
 */
public class ServeurSocket extends ServerSocket implements Runnable {
	/**
	 * Chaine contenant les données des clients connectés au serveur.
	 */
	private ArrayList<ClientServerSide> listeClients = new ArrayList<ClientServerSide>();
	
	/**
	 * Plateau de jeu.
	 */
	private Board b;
	
	/**
	 * Constructeur qui permet de démarrer un serveur TCP sur le numéro de port se trouvant dans la classe Param.
	 * @param multi JPanel multijoueur.
	 * @param mf Fenêtre principale de l'application.
	 * @throws IOException Erreurs de construction de l'objet Socket.
	 */
	public ServeurSocket() throws IOException {
		super(Param.NUMPORT);
		
		acceptePlusieursClients();
	}
	/**
	 * Méthode qui attend des clients pour les ajouter à la liste des clients connectés
	 */
	public void acceptePlusieursClients(){
		Thread t = new Thread(this);
		t.start();
	}
	/**
	 * Permet d'écrire sur tous les clients.
	 * @param o Objet à envoyer.
	 */
	public void ecrirSurTousLesClients(Object o){
		for (ClientServerSide clientCoteServeur : listeClients) {
			clientCoteServeur.ecrire(o);
		}
	}
	/**
	 * Changer la valeur du plateau.
	 * @param b Plateau de jeu.
	 */
	public void setB(Board b) {
		this.b = b;
	}
	/**
	 * Thread attendant des clients voulant se connecter.
	 */
	public void run() {
		while (!this.isClosed()){
			try {
				ClientServerSide ccs = new ClientServerSide(this.accept(), b);
				this.listeClients.add(ccs);
				
			} catch (IOException e) {
				
			}
		}
		
	}
}
